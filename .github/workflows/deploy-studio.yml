name: Deploy Sanity Studio (hosted)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "sanity.config.ts"
      - "sanity.cli.ts"
      - "sanity/**"
      - ".github/workflows/deploy-studio.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install minimal deps
        run: npm i --no-audit --no-fund sanity @sanity/vision

      - name: Sanity files present?
        run: |
          test -f sanity.config.ts || (echo "MISSING sanity.config.ts" && exit 1)
          test -f sanity.cli.ts || echo "TIP: sanity.cli.ts is optional but recommended"

      - name: Clean secrets (strip quotes/CRLF) & validate host
        run: |
          CLEAN_TOKEN=$(printf %s "${{ secrets.SANITY_AUTH_TOKEN }}" | tr -d '\r\n' | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//")
          HOST_RAW="${{ secrets.SANITY_STUDIO_HOST }}"
          HOST=$(printf %s "$HOST_RAW" | tr -d '\r\n' | tr '[:upper:]' '[:lower:]' | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//")
          if ! [[ "$HOST" =~ ^[a-z0-9-]+$ ]]; then
            echo "Invalid host '$HOST'. Allowed: lowercase letters, digits, hyphens."
            exit 1
          fi
          echo "SANITY_AUTH_TOKEN=$CLEAN_TOKEN" >> $GITHUB_ENV
          echo "HOST=$HOST" >> $GITHUB_ENV
          echo "Deploying Studio to https://$HOST.sanity.studio"

      - name: Deploy (non-interactive)
        env:
          SANITY_AUTH_TOKEN: ${{ env.SANITY_AUTH_TOKEN }}
          HOST: ${{ env.HOST }}
        run: |
          # Podejście 1: z argumentem
          npx --yes sanity@latest deploy "$HOST" --yes || {
            echo "CLI still asked for hostname, answering via stdin…"
            # Podejście 2: podanie hosta przez stdin (na wypadek promptu)
            printf "%s\n" "$HOST" | npx --yes sanity@latest deploy --yes
          }
